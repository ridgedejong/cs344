Exercise 8.3

a. You only have to set the initial learning_rate, and the FTRL optimizer will take this learning_rate and clip the
gradients accordingly, to train the model more effectively.
b. Bucketing/binning divides data into different chunks according to the set boundaries. This turns feature values
into bucket indices, allowing for better organization and access. The boundaries of these buckets can also be
calculated so that each bucket contains an equal number of elements.
c.
1. The following code was added to bucketize the other features:
  # Divide latitude into 8 buckets.
  bucketized_latitude = tf.feature_column.bucketized_column(
    latitude, boundaries=get_quantile_based_boundaries(
      training_examples["latitude"], 8))

  # Divide housing_median_age into 8 buckets.
  bucketized_housing_median_age = tf.feature_column.bucketized_column(
    housing_median_age, boundaries=get_quantile_based_boundaries(
      training_examples["housing_median_age"], 8))

  # Divide median_income into 8 buckets.
  bucketized_median_income = tf.feature_column.bucketized_column(
    median_income, boundaries=get_quantile_based_boundaries(
      training_examples["median_income"], 8))

  # Divide rooms_per_person into 8 buckets.
  bucketized_rooms_per_person = tf.feature_column.bucketized_column(
    rooms_per_person, boundaries=get_quantile_based_boundaries(
      training_examples["rooms_per_person"], 8))

With the hyperparameters set to learning_rate = 1.0, steps = 500, and batch = 100, a RMSE of 88.77 was found. Their
bucketing solution kind of made sense because they made latitude and longitude into 10 buckets and the others into
7 buckets, but I would've kept it simpler and made them all into 8 buckets.

2. The following code was added to create a feature cross of latitude and longitude:
  long_x_lat = tf.feature_column.crossed_column(
  set([bucketized_longitude, bucketized_latitude]), hash_bucket_size=1000)

With the hyperparameters set to learning_rate = 1.0, steps = 500, and batch = 100, a RMSE of 81.17 was found. One
unique feature cross would be to cross latitude and longitude and median_income. This would be beneficial because it
would create an even better representation of the more expensive and less expensive areas. Without the median_income,
the model has to find which areas are more and less expensive, but with the median_income included the model already
has an idea of the more and less expensive areas, leading to a stronger correlation between the location and the cost.